#!/usr/bin/env bash

set -eo pipefail

# Tools for managing draft, prerelease and actual Github release data

source .github/scripts/tag-search
fetch_latest_tag_names

_promote_draft_to_prerelease() {
  echo "Promote draft '$LATEST_DRAF_TAG' to release candidate ..."
  changelog=$(hub release show -f '%b' $LATEST_DRAFT_TAG)

  hub release edit --draft=false --prerelease \
    -m "$LATEST_DRAFT_TAG (rc)" -m "$changelog" "$LATEST_DRAFT_TAG"
}

_promote_prerelease_to_release() {
  echo "Creating a release '$LATEST_PREREL_TAG' ..."
  changelog=$(hub release show -f '%b' $LATEST_PREREL_TAG)

  hub release edit --prerelease=false \
    -m "$LATEST_PREREL_TAG" -m "$changelog" "$LATEST_PREREL_TAG"
}

_update_pre_release_tag() {
  echo "Current pre-release found. Advancing tag '$LATEST_PREREL_TAG' to rc HEAD ..."
  git tag -f "$LATEST_PREREL_TAG"
  git push -f origin "$LATEST_PREREL_TAG"
}

update_prerelease() {
  if [[ -z $LATEST_DRAFT_TAG && -z $LATEST_PREREL_TAG ]]; then
    echo "Could not find either dev or rc Github release! Can't do anything sane."
  elif [[ -z $LATEST_PREREL_TAG ]]; then
    _promote_draft_to_prerelease
  else
    # TODO Detect if this is dev branch merge to rc and in that case copy
    # draft release body text to the end of the pre-release body
    _update_pre_release_tag
  fi
}

release_new_version() {
  if [[ -z $LATEST_PREREL_TAG ]]; then
    echo "ERROR: Could not find rc Github release! Can't proceed with release!"
    exit 1
  else
    _promote_prerelease_to_release
  fi
}

"$@"
