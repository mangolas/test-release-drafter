#!/usr/bin/env bash

set -eo pipefail

# Manipulate pull requests

source .github/scripts/tag-search
fetch_latest_tag_names

_create_or_update_pr() {
  local from=$1
  local into=$2
  local title=$3
  local msg=$4
  local label=$5

  local pr_num
  pr_num=$(hub pr list -f '%I' -h "$from")
  if [[ -z $pr_num ]]; then
    echo "No existing pull request, creating new ..."
    hub pull-request -b "$into" -m "$title" -m "$msg" -l skip-changelog -l "$label"
  else
    echo "Pull request exists, updating title and body only ..."
    # Hub does not have simple command for updating pr yet
    hub api \
      -XPATCH \
      -H 'accept: application/vnd.github.shadow-cat-preview+json' \
      "repos/{owner}/{repo}/pulls/$pr_num" \
      -F "title=$title" \
      -F "body=$msg" > /dev/null
  fi
}

dev_to_rc() {
  title="Release candidate $LATEST_DRAFT_TAG"
  msg='This is automatically created pull request from pushes to dev-branch.

Merge this pull request to trigger release candidate process.'

  _create_or_update_pr dev rc "$title" "$msg" release-candidate
}

rc_to_master() {
  title="Release $LATEST_PREREL_TAG"
  msg='This is automatically created pull request from pushes to rc-branch.

Merge this pull request to trigger release process.'

  _create_or_update_pr rc master "$title" "$msg" release
}

master_to_dev() {
  title="Backmerge from master to dev"
  msg='This is automatically created pull request from pushes to master-branch.

Just close this pull request, if there are no real changes but only merge commits.'

  _create_or_update_pr master dev "$title" "$msg" back-merge
}

"$@"
